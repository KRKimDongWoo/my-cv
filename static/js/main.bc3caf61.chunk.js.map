{"version":3,"sources":["components/layout/Toolbar.jsx","components/layout/TextBox.jsx","components/contents/EducationContent.jsx","components/Formats.jsx","components/contents/ExperienceContent.jsx","components/contents/ProjectContent.jsx","components/contents/index.jsx","components/contents/SkillContent.jsx","components/layout/Profile.jsx","components/views/PortfolioView.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Toolbar","className","AppBar","position","to","style","textDecoration","color","Typography","variant","TextBox","props","title","content","getProps","Card","width","CardContent","EducationContent","lang","List","ListItem","flexDirection","alignItems","Experience","startsAt","endsAt","skills","getExperienceProps","map","item","idx","key","dense","Project","repo","getProjectProps","href","ExperienceContent","Divider","ProjectContent","SkillContent","ListSubheader","Profile","elevation","Grid","container","PortfolioView","state","Container","React","Component","App","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bc3caf61.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  AppBar,\n  Toolbar as MToolbar,\n  Typography,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nexport default function Toolbar() {\n  return (\n    <div className=\"header\">\n      <AppBar position=\"static\">\n        <MToolbar>\n          <Link to=\"/profile\" style={{ textDecoration: 'none', color: '#fff' }}>\n            <Typography variant=\"h6\">\n              Portfolio\n            </Typography>\n          </Link>\n        </MToolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Typography, Card, CardContent } from '@material-ui/core';\n\nconst getProps = (props) => ({\n  title: props.title,\n  content: props.content,\n});\n\nexport default function TextBox(props) {\n  const { title, content } = getProps(props);\n\n  return (\n    <Card style={{ width: '100%' }}>\n      <CardContent>\n        <Typography variant=\"h4\">\n          {title}\n        </Typography>\n        <hr />\n        <div>\n          {content}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { List, ListItem, Typography } from '@material-ui/core';\n\nconst getProps = (props) => ({\n  lang: props.lang,\n});\n\nconst EducationContentEN = () => (\n  <List>\n    <ListItem style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n      <Typography variant=\"h5\"> Seoul National University </Typography>\n      <List>\n        <ListItem>\n          <Typography variant=\"body1\">\n            Computer Science and Engineering (Mar. 2017 ~)\n          </Typography>\n        </ListItem>\n        <ListItem>\n          <Typography variant=\"body1\">\n            Business Administration (Sep. 2019 ~)\n          </Typography>\n        </ListItem>\n      </List>\n    </ListItem>\n  </List>\n);\n\nconst EducationContentKR = () => (\n  <List>\n    <ListItem style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n      <Typography variant=\"h5\"> 서울대학교 </Typography>\n      <List>\n        <ListItem>\n          <Typography variant=\"body1\">\n            컴퓨터공학부 주전공 (Mar. 2017 ~)\n          </Typography>\n        </ListItem>\n        <ListItem>\n          <Typography variant=\"body1\">\n            경영학부 복수전공 (Sep. 2019 ~)\n          </Typography>\n        </ListItem>\n      </List>\n    </ListItem>\n  </List>\n);\n\nconst EducationContent = (props) => {\n  const { lang } = getProps(props);\n\n  switch (lang) {\n    case 'KR':\n      return EducationContentKR();\n    case 'EN':\n      return EducationContentEN();\n    default:\n      return null;\n  }\n};\n\nexport default EducationContent;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Typography, ListItem, List } from '@material-ui/core';\n\nconst getExperienceProps = (props) => ({\n  title: props.title,\n  startsAt: (props.startsAt) ? props.startsAt : '',\n  endsAt: (props.endsAt) ? props.endsAt : '',\n  content: props.content,\n  skills: props.skills,\n});\n\n\nconst getProjectProps = (props) => ({\n  title: props.title,\n  repo: props.repo,\n  startsAt: (props.startsAt) ? props.startsAt : '',\n  endsAt: (props.endsAt) ? props.endsAt : '',\n  content: props.content,\n  skills: props.skills,\n});\n\n\nexport const Experience = (props) => {\n  const {\n    title,\n    startsAt,\n    endsAt,\n    content,\n    skills,\n  } = getExperienceProps(props);\n\n  return (\n    <div>\n      <Typography variant=\"h5\">\n        {title}\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        {`${startsAt} ~ ${endsAt}`}\n      </Typography>\n      <List>\n        {content.map((item, idx) => (\n          <ListItem key={idx} dense>\n            <Typography variant=\"body1\">\n              {item}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n      <Typography variant=\"body2\">\n        {`Related skills - ${skills}`}\n      </Typography>\n    </div>\n  );\n};\n\nexport const Project = (props) => {\n  const {\n    title,\n    repo,\n    startsAt,\n    endsAt,\n    content,\n    skills,\n  } = getProjectProps(props);\n\n  return (\n    <div>\n      <Typography variant=\"h5\">\n        {`${title} `}\n        {\n          (repo) ? (\n            <a href={repo}>\n              repo\n            </a>\n          ) : (\n            <p> (private repo) </p>\n          )\n        }\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        {`${startsAt} ~ ${endsAt}`}\n      </Typography>\n      <List>\n        {content.map((item, idx) => (\n          <ListItem key={idx} dense>\n            <Typography variant=\"body1\">\n              {item}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n      <Typography variant=\"body2\">\n        {`Related skills - ${skills}`}\n      </Typography>\n    </div>\n  );\n};\n\nexport default { Experience, Project };\n","import React from 'react';\nimport { List, ListItem, Divider } from '@material-ui/core';\nimport { Experience } from 'components/Formats';\n\nconst getProps = (props) => ({\n  lang: props.lang,\n});\n\nconst ExperienceContentKR = () => (\n  <List>\n    <ListItem>\n      <Experience\n        title=\"서울대학교 아키텍처 및 코드 최적화 연구실 인턴\"\n        startsAt=\"2019년 1월\"\n        endsAt=\"2019년 2월\"\n        content={['JavaScript 기반 IoT 응용을 위한 CPU 설계 연구 참여',\n          'Node.js, Spidermonkey 등 javascript engine의 Raspberry Pi와 RISC-V 보드로의 cross compiling',\n          'Spidernode 빌드 오류 발견 및 수정사항 PR(#400)',\n        ]}\n        skills=\"C++, JavaScript engines, cross-compiling 기술\"\n      />\n    </ListItem>\n    <Divider />\n    <ListItem>\n      <Experience\n        title=\"서울대학교 소프트웨어 플랫폼 연구실 인턴\"\n        startsAt=\"2019년 7월\"\n        endsAt=\"2019년 8월\"\n        content={['Random Search에 기반한 Neural Architecture model 검색 연구.\\'',\n          'Hyperparameter tuning 관련 논문 검색 및 연구 (NAS, autokeras 등)',\n          'Random search algorithm 및 policy 구현, weight transfer 기능 구현 및 성능 테스트',\n        ]}\n        skills=\"Python, PyTorch, FastAI library, DL\"\n      />\n    </ListItem>\n    <Divider />\n    <ListItem>\n      <Experience\n        title=\"서울대학교 소프트웨어 플랫폼 연구실 인턴\"\n        startsAt=\"2020년 1월\"\n        endsAt=\"2020년 3월\"\n        content={['GPU resource 관리 framework 개발 참여',\n          'Framework를 위한 CLI 구현',\n          'Framework를 위한 Web UI의 기본 코드 작성',\n          'Framework에서 사용하기 위한 Docker-registry 관련 API 구현 (진행중)',\n        ]}\n        skills=\"Python, asyncio library, typescript, React, Redux, redux-saga, docker, docker registry\"\n      />\n    </ListItem>\n  </List>\n);\n\nconst ExperienceContentEN = () => (\n  <List>\n    <ListItem>\n      <Experience\n        title=\"SNU Architecture and Code Optimization Lab Internship\"\n        startsAt=\"Jan 2019\"\n        endsAt=\"Feb 2019\"\n        content={['Researched \\'CPU Architecture for JavaScript based IoT Devices.\\'',\n          'Crosscompiling Node.js and SpiderMonkey to Raspberry Pi and RISC-V Board.',\n          'Fix problem on Spidernode and send PR(#400)',\n        ]}\n        skills=\"C++, JavaScript engines, cross-compiling techniques\"\n      />\n    </ListItem>\n    <Divider />\n    <ListItem>\n      <Experience\n        title=\"SNU Software Platform Lab Internship\"\n        startsAt=\"July 2019\"\n        endsAt=\"Aug 2019\"\n        content={['Researched \\'Neural Architecture Search Based on Random Search.\\'',\n          'Read papers related to hyperparameter tuning. (e.g NAS, autokeras...)',\n          'Implemented own random search algorithm, and apply it to image classifcation.',\n        ]}\n        skills=\"Python, PyTorch, FastAI library, DL\"\n      />\n    </ListItem>\n    <Divider />\n    <ListItem>\n      <Experience\n        title=\"SNU Software Platform Lab Internship\"\n        startsAt=\"Jan 2020\"\n        endsAt=\"Mar 2020\"\n        content={['Joined development on GPU resource management framework.',\n          'Implemented CLI for the framework.',\n          'Implemented base code for the web UI for framework.',\n          'Implemented docker-registry related functions in core/CLI (ongoing)',\n        ]}\n        skills=\"Python, asyncio library, typescript, React, Redux, redux-saga, docker, docker registry\"\n      />\n    </ListItem>\n  </List>\n);\n\nconst ExperienceContent = (props) => {\n  const { lang } = getProps(props);\n\n  switch (lang) {\n    case 'KR':\n      return ExperienceContentKR();\n    case 'EN':\n      return ExperienceContentEN();\n    default:\n      return null;\n  }\n};\n\nexport default ExperienceContent;\n","import React from 'react';\nimport { List, ListItem, Divider } from '@material-ui/core';\nimport { Project } from 'components/Formats';\n\nconst getProps = (props) => ({\n  lang: props.lang,\n});\n\nconst ProjectContentKR = () => (\n  <List>\n    <ListItem>\n      <Project\n        title=\"웹 개발 (관련 강의: SNU M1522.002400)\"\n        repo=\"https://github.com/thunderlink/thunderfish\"\n        startsAt=\"2019년 3월\"\n        endsAt=\"2019년 6월\"\n        content={['번개 생성 및 참여를 위한 웹 서비스 제작',\n          'Frontend UI 디자인 및 구현',\n          'Frontend, backend 간 HTTP request 구현',\n          '팀원 코드 리뷰',\n        ]}\n        skills=\"Python, Django, React, Redux, redux-saga, css, git\"\n      />\n    </ListItem>\n    <Divider />\n    <ListItem>\n      <Project\n        title=\"GStreamer를 위한 Live profiler 구현 (Course: SNU M1522.000200)\"\n        repo=\"https://github.com/cts-2019f-nnstreamer/gst-shark\"\n        startsAt=\"2019년 9월\"\n        endsAt=\"2019년 12월\"\n        content={['현재 진행중인 stream에 대한 실시간 profiler 구현',\n          '기존의 tracer 코드 분석 (GstShark)',\n          'Profiler의 tracer에 사용하기 위한 hook function 구현',\n          'NCurses 라이브러리를 사용하기 위한 multi-thread 기능 구현',\n          'NCurses 라이브러리를 이용한 UI Design 도움',\n        ]}\n        skills=\"C, GLib, GStreamer, NCurses\"\n      />\n    </ListItem>\n  </List>\n);\n\nconst ProjectContentEN = () => (\n  <List>\n    <ListItem>\n      <Project\n        title=\"Web Development (Course: SNU M1522.002400)\"\n        repo=\"https://github.com/thunderlink/thunderfish\"\n        startsAt=\"Mar 2019\"\n        endsAt=\"Jul 2019\"\n        content={['Develop web service for create/join meetings.',\n          'Design frontend UI and implement',\n          'Implement communication between backend and frontend',\n          'Review codes from co-workers',\n        ]}\n        skills=\"Python, Django, React, Redux, redux-saga, css, git\"\n      />\n    </ListItem>\n    <Divider />\n    <ListItem>\n      <Project\n        title=\"Live Profiler for GStreamer (Course: SNU M1522.000200)\"\n        repo=\"https://github.com/cts-2019f-nnstreamer/gst-shark\"\n        startsAt=\"Oct 2019\"\n        endsAt=\"Dec 2019\"\n        content={['Develop profiler shows profiling data for current stream.',\n          'Code analysis on existing tracer (GstShark)',\n          'Implement hook functions for the tracer.',\n          'Implement multi-thread function for visualization.',\n          'Help teammates dealing with UI design (NCurses lib).',\n        ]}\n        skills=\"C, GLib, GStreamer, NCurses\"\n      />\n    </ListItem>\n  </List>\n);\n\nconst ProjectContent = (props) => {\n  const { lang } = getProps(props);\n\n  switch (lang) {\n    case 'KR':\n      return ProjectContentKR();\n    case 'EN':\n      return ProjectContentEN();\n    default:\n      return null;\n  }\n};\n\nexport default ProjectContent;\n","import EducationContent from 'components/contents/EducationContent';\nimport ExperienceContent from 'components/contents/ExperienceContent';\nimport ProjectContent from 'components/contents/ProjectContent';\nimport SkillContent from 'components/contents/SkillContent';\n\nexport default {\n  EducationContent,\n  ExperienceContent,\n  ProjectContent,\n  SkillContent,\n};\n","import React from 'react';\nimport {\n  List,\n  ListSubheader,\n  Typography,\n  ListItem,\n} from '@material-ui/core';\n\nconst getProps = (props) => ({\n  lang: props.lang,\n});\n\nconst SkillContentKR = () => (\n  <List>\n    <ListSubheader style={{ color: 'black' }}>\n      <Typography variant=\"h5\"> 이수 강좌 </Typography>\n    </ListSubheader>\n    <ListItem>\n      <List>\n        <ListItem> 컴퓨터의 개념 및 실습 (A0)</ListItem>\n        <ListItem> 논리설계 (A-) </ListItem>\n        <ListItem> 컴퓨터구조 (A+) </ListItem>\n        <ListItem> 자료구조 (A-) </ListItem>\n        <ListItem> 전기전자회로 (A0) </ListItem>\n        <ListItem> 하드웨어 시스템 설계 (A0) </ListItem>\n        <ListItem> 시스템 프로그래밍 (A-) </ListItem>\n        <ListItem> 소프트웨어 개발의 원리와 실습 (A0) </ListItem>\n      </List>\n    </ListItem>\n    <ListSubheader style={{ color: 'black' }}>\n      <Typography variant=\"h5\"> Programming Skills </Typography>\n    </ListSubheader>\n    <ListItem>\n      <List>\n        <ListItem>\n          <Typography variant=\"body1\">\n            <strong>\n              {'프로그래밍 언어: '}\n            </strong>\n            C, C++, Java, Python 3, JavaScript, typescript, css\n          </Typography>\n        </ListItem>\n        <ListItem variant=\"body1\">\n          <Typography variant=\"body1\">\n            <strong>\n              {'라이브러리 및 프레임워크: '}\n            </strong>\n            React, Redux, Django, PyTorch, GLib\n          </Typography>\n        </ListItem>\n        <ListItem variant=\"body1\">\n          <Typography variant=\"body1\">\n            <strong>\n              {'기타: '}\n            </strong>\n            Git\n          </Typography>\n        </ListItem>\n      </List>\n    </ListItem>\n  </List>\n);\n\nconst SkillContentEN = () => (\n  <List>\n    <ListSubheader style={{ color: 'black' }}>\n      <Typography variant=\"h5\"> Courses </Typography>\n    </ListSubheader>\n    <ListItem>\n      <List>\n        <ListItem> Digital Computer Concept and Practice (A0)</ListItem>\n        <ListItem> Logic Design (A-) </ListItem>\n        <ListItem> Computer Architecture (A+) </ListItem>\n        <ListItem> Data Structure (A-) </ListItem>\n        <ListItem> Electrical and Electronic Circuits (A0) </ListItem>\n        <ListItem> Hardware System Design (A0) </ListItem>\n        <ListItem> System Programming (A-) </ListItem>\n        <ListItem> Principles and Practices of Software Development (A0) </ListItem>\n      </List>\n    </ListItem>\n    <ListSubheader style={{ color: 'black' }}>\n      <Typography variant=\"h5\"> Programming Skills </Typography>\n    </ListSubheader>\n    <ListItem>\n      <List>\n        <ListItem>\n          <Typography variant=\"body1\">\n            <strong>\n              {'Languages: '}\n            </strong>\n            C, C++, Java, Python 3, JavaScript, typescript, css\n          </Typography>\n        </ListItem>\n        <ListItem variant=\"body1\">\n          <Typography variant=\"body1\">\n            <strong>\n              {'Library and Frameworks: '}\n            </strong>\n            React, Redux, Django, PyTorch, GLib\n          </Typography>\n        </ListItem>\n        <ListItem variant=\"body1\">\n          <Typography variant=\"body1\">\n            <strong>\n              {'etc.: '}\n            </strong>\n            Git\n          </Typography>\n        </ListItem>\n      </List>\n    </ListItem>\n  </List>\n);\n\nconst SkillContent = (props) => {\n  const { lang } = getProps(props);\n\n  switch (lang) {\n    case 'KR':\n      return SkillContentKR();\n    case 'EN':\n      return SkillContentEN();\n    default:\n      return null;\n  }\n};\n\nexport default SkillContent;\n","import React from 'react';\nimport {\n  Typography,\n  Grid,\n  CardContent,\n  Card,\n} from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport EmailIcon from '@material-ui/icons/Email';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\n\nconst Profile = () => (\n  <Card elevation={3}>\n    <CardContent>\n      <Typography variant=\"h3\"> Dongwoo Kim </Typography>\n      <Grid container>\n        <Grid item>\n          <a href=\"https://www.github.com/krkimdongwoo\" style={{ color: 'black' }}>\n            <GitHubIcon />\n          </a>\n        </Grid>\n        <Grid item>\n          <a href=\"https://www.facebook.com/mandongwoo\" style={{ color: '#4267b2' }}>\n            <FacebookIcon />\n          </a>\n        </Grid>\n        <Grid item>\n          <a href=\"https://www.instagram.com/marcus.dwk/\" style={{ color: 'red' }}>\n            <InstagramIcon />\n          </a>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item>\n          <EmailIcon />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"body1\"> dhsodhao52@snu.ac.kr </Typography>\n        </Grid>\n      </Grid>\n      <Typography variant=\"h6\">\n        Undergraduate in dept. of Computer science & engineering,\n        Seoul National University\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nexport default Profile;\n","import React from 'react';\nimport TextBox from 'components/layout/TextBox';\nimport { List, ListItem, Container } from '@material-ui/core';\nimport content from 'components/contents';\n\nimport Profile from 'components/layout/Profile';\n\nexport default class PortfolioView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Container className=\"portfolio-view\">\n        <Profile />\n        <List>\n          <ListItem>\n            <TextBox title=\"Education\" content={<content.EducationContent lang=\"KR\" />} />\n          </ListItem>\n          <ListItem>\n            <TextBox title=\"Experiences\" content={<content.ExperienceContent lang=\"KR\" />} />\n          </ListItem>\n          <ListItem>\n            <TextBox title=\"Projects\" content={<content.ProjectContent lang=\"KR\" />} />\n          </ListItem>\n          <ListItem>\n            <TextBox title=\"Skills\" content={<content.SkillContent lang=\"KR\" />} />\n          </ListItem>\n        </List>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Toolbar from 'components/layout/Toolbar';\n\nimport './App.css';\nimport PortfolioView from 'components/views/PortfolioView';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Toolbar />\n        <Switch>\n          <Route component={PortfolioView} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}